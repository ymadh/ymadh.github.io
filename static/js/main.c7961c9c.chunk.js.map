{"version":3,"sources":["nitro.jpg","turbo.jpg","store/api.js","store/blogSlice.js","components/header.jsx","components/common/pagination.jsx","components/postList.jsx","components/store.jsx","components/noMatch.jsx","components/redux.jsx","components/algorithms.jsx","components/about.jsx","components/content.jsx","App.js","serviceWorker.js","store/photoSlice.js","store/reducer.js","store/configureStore.js","index.js"],"names":["module","exports","createAction","blogSlice","createSlice","name","initialState","list","loading","numBlogs","currentPage","reducers","addBlogPost","state","action","push","payload","loadBlogPosts","changeNumBlogs","parseInt","changeCurrentPage","actions","numBlogsSelector","getPaginatedBlogPosts","createSelector","items","num","page","sliceBeg","slice","Header","class","className","src","to","exact","activeClassName","href","Pagination","itemsCount","pageSize","onPageChange","pagesCount","Math","ceil","console","log","disabled","onClick","PostList","dispatch","useDispatch","store","useStore","posts","useSelector","numItems","numPosts","getState","length","onChange","evt","target","value","map","item","key","post","id","title","body","Store","NoMatch","location","useLocation","pathname","ReduxText","Redux","path","Algorithms","About","height","NitroImage","TurboImage","Content","App","useEffect","a","fetch","config","response","json","data","Boolean","window","hostname","match","photoSlice","loadPhotos","changeNumItems","i","n","combineReducers","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c7961c9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nitro.121f5ffa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/turbo.631d4379.jpg\";","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\");\nexport const apiCallSuccess = createAction(\"api/callSuccess\");\nexport const apiCallFailed = createAction(\"api/callFailed\");\n","import { createSlice } from '@reduxjs/toolkit'\nimport { apiCallBegan } from './api';\nimport { dispatch } from 'react-redux';\nimport * as config from '../config.json';      \nimport { createSelector } from 'reselect';\n\nconst blogSlice = createSlice({\n  name: 'blogs',\n  initialState: {\n    list: [],\n    loading: false,\n    numBlogs: 6,\n    currentPage: 1\n  },\n  reducers: {\n    addBlogPost: (state, action) => {\n        state.list.push(action.payload);\n    },\n    loadBlogPosts: (state, action) => {\n      state.list = action.payload;\n    },\n    changeNumBlogs: (state, action) => {\n      state.numBlogs = parseInt(action.payload);\n      state.currentPage = 1;\n    },\n    changeCurrentPage: (state, action) => {\n      state.currentPage = state.currentPage + parseInt(action.payload);\n    }\n  }\n});\n\nexport const {addBlogPost, loadBlogPosts, changeNumBlogs, changeCurrentPage} = blogSlice.actions;\n\nexport default blogSlice.reducer;\n\nconst url = 'posts';\n\n// actions - to chain some actions\n// so call api add bug then bug added\n  export const createBlogPost = blog =>\n  apiCallBegan({\n    url,\n    method: \"post\",\n    data: blog,\n    onSuccess: addBlogPost.type\n  });\n\n  export function getBlogPosts() {\n      return async dispatch => {\n       \n        try {\n          const response = await fetch(config.apiUrl + url);\n          const data = await response.json();\n    \n          dispatch(loadBlogPosts(data))\n        } catch (error) {\n          console.log(error);\n          // dispatch(getRecipesFailure())\n        }\n      }\n    };\n\n    // export const getPaginatedBlogPosts = state =>  state.blogSlice.list;\n    const blogSelector = state => state.blogSlice.list;\n    const pageSelector = state => state.blogSlice.currentPage;\n    export const numBlogsSelector = state => state.blogSlice.numBlogs;\n\n    export const getPaginatedBlogPosts = createSelector(\n      blogSelector,\n      numBlogsSelector,\n      pageSelector,\n      (items, num, page) => {\n        let sliceBeg = (page - 1) * num;\n        return items.slice(sliceBeg, sliceBeg + num);\n      });\n\n\n\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nconst Header = () => {\n    return ( \n        <header>\n            <nav class=\"row navbar navbar-light bg-white\">\n                <div className=\"col-1 text-right offset-md-1\">\n                    <img className=\"rounded-circle\" src=\"https://media-exp1.licdn.com/dms/image/C4D03AQEqTr3b0p-IjA/profile-displayphoto-shrink_200_200/0/1600640077493?e=1615420800&amp;v=beta&amp;t=WVmPIY8lvEnWoXVjmX5AiL8vnbjSlgkCpLG4BA1pKO0\" />\n                </div>\n                <div className=\"col-md-4\">\n                    <h2>Amy Wightman</h2>\n                </div>\n                <div className=\"col-md-6 text-center\">\n                    <ul className=\"list-inline\">\n                        <li className=\"list-inline-item navbar-brand\">\n                            <NavLink to=\"/\" exact activeClassName=\"active\">\n                                <i className=\"fa fa-address-card fa-lg\"></i>\n                                About\n                            </NavLink>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <NavLink to=\"/redux\" activeClassName=\"active\"><i className=\"fa fa-lock fa-lg\"></i>Redux</NavLink>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <NavLink to=\"/algorithms\" activeClassName=\"active\">\n                            <i className=\"fa fa-file fa-lg\"></i>\n                            Algorithms\n                            </NavLink>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <a href=\"https://github.com/ymadh/ymadh.github.io\">\n                            <i className=\"fa fa-github fa-lg\"></i>\n                            Github\n                            </a>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <a href=\"https://www.linkedin.com/in/amydunphy/\">\n                            <i className=\"class fa fa-linkedin fa-lg\"></i>\n                            LinkedIn</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n     );\n}\n \nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport _ from \"lodash\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n//   const pages = _.range(1, pagesCount + 1);\n\nconsole.log(currentPage, pagesCount);\n  return (\n    <nav>\n      <ul className=\"pagination pagination-sm\">\n      <li><button disabled={currentPage === 1} className=\"mr-2 btn btn-primary\" onClick={() => onPageChange(-1)}>Prev</button></li>\n      <li><button disabled={currentPage === pagesCount} className=\"btn btn-primary\" onClick={() => onPageChange(1)}>Next</button></li>\n       \n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\nimport { getPaginatedBlogPosts, changeNumBlogs, numBlogsSelector, changeCurrentPage } from '../store/blogSlice';\nimport Pagination from './common/pagination';\n\nconst PostList = () => {\n\n    // todo \n    // write a custom shared hook\n    const dispatch = useDispatch();\n    const store = useStore();\n    \n    \n    const posts = useSelector(getPaginatedBlogPosts);\n    const numItems = useSelector(numBlogsSelector);\n    const numPosts = store.getState().blogSlice.list.length;\n    const currentPage = store.getState().blogSlice.currentPage;\n\n    const numItemsArr = [3,6,12,24,36];\n    const handleNumChange = (evt) => {\n        dispatch(changeNumBlogs(evt.target.value));\n    }\n\n    const handlePageChange = (value) =>  {\n        dispatch(changeCurrentPage(value));\n    }\n  \n    console.log(posts);\n\n    return (  \n        <div className=\"container\">\n        <div className=\"row  m-2\"> \n            <div className=\"col-md-2 offset-md-10\">\n                <select onChange={handleNumChange} className=\"btn-mini\">\n                <option value=\"\">Show</option>\n                    {numItemsArr.map((item) => <option key={item} value={item}>{item}</option>)}\n                </select>\n            </div>\n            \n        </div>\n        <div className=\"row justify-content-md-center\">\n\n            {posts.map((post) =>  {\n                return (\n                    <div key={post.id} className=\"card  col-md-3 m-1 \">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{post.title}</h5>\n                            <p className=\"card-text\">\n                            {post.body}\n                            </p>\n                            <a className=\"btn btn-primary\">Go somewhere</a>\n                        </div>\n                    </div>\n                );\n               \n            })}\n        </div>\n        <Pagination itemsCount={numPosts} pageSize={numItems} currentPage={currentPage} onPageChange={handlePageChange} />\n        </div>\n    )\n}\n \nexport default PostList;","import React from 'react';\n\nconst Store = () => {\n    return ( <div>Store</div> );\n}\n \nexport default Store;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nconst NoMatch = () => {\n    let location = useLocation();\n\n    return (\n      <div>\n        <p>\n          No match for <code>{location.pathname}</code>\n        </p>\n      </div>\n    );;\n}\n \nexport default NoMatch;","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport PostList from './postList';\nimport Store from './store';\nimport NoMatch from './noMatch';\n\nconst Redux = () => {\n    return (\n        <main className=\"bg-light\">\n\n            <div className=\"className container\">\n                <section className=\"py-3 text-center\">\n                    <div className=\"row py-lg-5\">\n                        <div className=\"col-lg-6 col-md-8 mx-auto\">\n                            <h3>Welcome</h3>\n                            <hr />\n                            \n                            <a href=\"https://github.com/ymadh/ymadh.github.io\" className=\"btn btn-secondary\">Checkout my source code</a>\n\n                        </div>\n                    </div>\n                </section>\n\n      \n                    \n                 \n                    \n                <section>\n                <div className=\"container\">\n                    <ul className=\"secondaryNav nav nav-pills mt-3\">\n                        <li className=\"nav-item\">\n                            <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/redux\">Home</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/redux/store\">Store</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/redux/post\">Blog Posts</NavLink>\n                        </li>\n\n                    </ul>\n                    <Switch>\n                        <Route path=\"/redux/post\">\n                            <PostList />\n                        </Route>\n                        <Route path=\"/redux/store\">\n                            <Store />\n                        </Route>\n                        <Route path=\"/redux\" exact>\n                            <ReduxText />\n                        </Route>\n\n                        <Route path=\"*\">\n                            <NoMatch />\n                        </Route>\n                    </Switch>\n                    </div>\n                </section>\n            </div>\n\n        </main>\n    );\n}\n\nfunction ReduxText() {\n    return (\n        <div>\n            <hr />\n            <p>Store: React / Redux exaple of a shopping cart</p>\n            \n            <p>Blog Posts: React / Redux example of a list of blog posts with pagination</p>\n        </div>\n    );\n}\nexport default Redux;","import React from 'react';\n\nconst Algorithms = () => {\n    return ( \n        <main className=\"bg-light\">\n\n        <div className=\"className container\">\n            <section className=\"py-3 text-center\">\n                <div className=\"row py-lg-5\">\n                    <div className=\"col-lg-6 col-md-8 mx-auto\">\n                        <h3>Algorithms</h3>\n                 \n                    </div>\n                </div>\n            </section>\n            </div>\n        </main>\n     );\n}\n \nexport default Algorithms;","import React from 'react';\nimport NitroImage from '../nitro.jpg';\n\nimport TurboImage from '../turbo.jpg';\n\nconst About = () => {\n    return (\n        <main className=\" bg-light\">\n\n        <section className=\"container\">\n                \n                <h3 className=\"text-center\">About Me!</h3>\n                <hr />\n                <p>As a full stack developer for the last 10+ years I have worked with product managers and owners\n                    to developer fully functioning high quality websites. I have been fortunate to work on commercial software\n                    products as well as internal tools to help businesses grow and succeed. \n                </p>\n                <p>I enjoy working with all types of technology and try to spend my free time reading books, taking courses\n                    and practicing various coding skills. The purpose of this site is to serve as a bit of a playground for \n                    things I would like to learn and get better at. Much of my php code remains at work and therefore is private.\n\n                </p>\n                <p>Personally, I am a mom to two boys, one of which is planning on studying Computer Science and the other, \n                    is leaning towards military for a few years. I have two amazing dogs Nitro (lab) \n                    and Turbo (chihuahua). My husband Tanner is a <a href=\"http://www.wightmaninspectiongroup.com\">home inspector</a> in the Charlotte NC area. In our spare time we\n                     love to golf.\n                </p>\n                <div className=\"row justify-content-md-center mb-3\"> \n                    <div className=\"col-md-auto\">\n                        <img className=\"rounded\" height=\"250px\" src={NitroImage} />\n                    </div>\n                    <div className=\"col-md-auto\">\n                     <img className=\"rounded\" height=\"250px\" src={TurboImage} />\n                    </div>\n                </div>\n                \n                <p className=\"text-primary\">Tech Used to develop this site: React, Redux, Webpack, Bootstrap, Github pages</p>\n            </section>\n                \n                \n            <section className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Server Side</th>\n                            <th>Client Side</th>\n                            <th>Other</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>PHP<br />\n                                Symfony<br />\n                                Api Platform<br />\n                               \n                                Redis<br />\n                                PHPUnit<br />\n                                .NET (limited)<br />\n                                Node (limited)<br />\n                                Python (educationally)\n                                </td>\n                            <td>Javascript (ES6)<br />\n                                JQuery<br />\n                                React<br />\n                                Angular<br />\n                                Bootstrap<br />\n                                Functional Testing<br />\n                            </td>\n                            <td>Rest API <br />\n                                ElasticSearch<br />\n                                WebPack<br />\n                                Azure Cloud<br />\n                                Git<br />\n                                Jira<br /></td>\n                        </tr>\n\n                    </tbody>\n                </table>\n            </section>\n            <section className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Previous Roles</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <p className=\"font-weight-bold\">Backend Developer</p>\n                                <p>Developed new features, fixed bugs, implemented unit tests.\n                                    Deployed code using bamboo. Created and conusumed REST api's.\n                                </p>\n                                <p className=\"font-weight-bold\">Frontend Developer</p>\n                                <p>Worked on multiple teams writing code in Angular / React. Using designs from the UX teams\n                                    html / css was implemented.\n                                </p>\n                               \n                                <p className=\"font-weight-bold\">Lead Developer</p>\n                                <p>Worked with project managers to plan and execute new features.</p>\n                             \n                                <p className=\"font-weight-bold\">Scrum Master</p>\n                                <p>Helped manange the backlog and worked with the team to provide estimates, plan sprints and run standups.</p>\n\n                            </td>\n                        </tr>\n\n\n                    </tbody>\n                </table>\n            </section>\n            <section className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Education</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                B.S. Computer Science, George Mason University 1999<br />\n                                M.S. Computer Science, East Carolina Universty - In Progress\n                </td>\n                        </tr>\n                        <tr>\n                            <td>Other Courses Taken:<br />\n                                ES6 Javascript: The Complete Developers Guide - Stephen Grider<br />\n                                Mastering React - Mosh Hamedani<br />\n                                The Ultimate Redux Course - Mosh Hamedani<br />\n                                The Complete Node.js Course\n                </td>\n                        </tr>\n\n                    </tbody>\n                </table>\n            </section>\n\n\n        </main>\n    );\n}\n\nexport default About;","import React from 'react';\nimport { Switch, Route} from 'react-router-dom';\n\nimport Redux from './redux';\nimport Algorithms from './algorithms';\nimport About from './about';\nimport NoMatch from './noMatch';\n\nconst Content = () => {\n    return ( \n        <Switch>\n            <Route path=\"/redux\">\n                <Redux />\n            </Route>\n            <Route path=\"/algorithms\">\n                <Algorithms />\n             </Route>\n             <Route path=\"/\" exact>\n                <About />\n             </Route>\n             <Route path=\"*\">\n                <NoMatch />\n            </Route>\n        </Switch>\n        \n     );\n}\n \nexport default Content;","import React, { useEffect, useState } from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { getBlogPosts } from './store/blogSlice';\r\nimport Header from './components/header';\r\nimport Content from './components/content';\r\nimport './App.css';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getBlogPosts());\r\n\r\n\r\n  }, [dispatch]);\r\n\r\n\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Content />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createSlice } from '@reduxjs/toolkit'\nimport { apiCallBegan } from './api';\nimport * as config from '../config.json';      \nimport { createSelector } from 'reselect';\n\nconst photoSlice = createSlice({\n  name: 'photos',\n  initialState: {\n    list: [],\n    loading: false,\n    numItems: 12\n  },\n  reducers: {\n   \n    loadPhotos: (state, action) => {\n      state.list = action.payload;\n    },\n    changeNumItems: (state, action) => {\n      state.numItems = parseInt(action.payload);\n    }\n  }\n});\n\nexport const {loadPhotos, changeNumItems} = photoSlice.actions;\n\nexport default photoSlice.reducer;\n\nconst url = 'photos';\n\n  export function getPhotos() {\n      return async dispatch => {\n       \n        try {\n          const response = await fetch(config.apiUrl + url);\n          const data = await response.json();\n    \n          dispatch(loadPhotos(data))\n        } catch (error) {\n          console.log(error);\n\n          //todo handle errors\n        }\n      }\n    };\n\n    // export const getPaginatedBlogPosts = state =>  state.blogSlice.list;\n    const photoSelector = state => state.photoSlice.list;\n    export const numPhotoSelector = state => state.photoSlice.numItems;\n\n    export const getPaginatedPhotos = createSelector(\n      photoSelector,\n      numPhotoSelector,\n      (i, n) => i.slice(0,n));\n\n\n","import blogSlice from './blogSlice';\nimport photoSlice from './photoSlice';\nimport { combineReducers } from 'redux';\n\n\nexport default combineReducers({\n  blogSlice,\n  photoSlice  \n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport combineReducers from './reducer.js';\r\n\r\nexport default configureStore({\r\n  reducer: combineReducers\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from './store/configureStore';\r\nimport './custom.scss';\r\n// import './index.css';\r\n\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}