{"version":3,"sources":["assets/nitro.jpg","assets/turbo.jpg","components/header.jsx","store/blogSlice.js","components/common/pagination.jsx","components/postList.jsx","store/cartSlice.js","components/products/product.jsx","components/products/productList.jsx","components/products/shoppingCartIcon.jsx","components/cart/cartHeader.jsx","components/cart/cartItemDetail.jsx","components/cart/cartList.jsx","components/store.jsx","components/noMatch.jsx","components/redux.jsx","components/topics/sortalgorithms/insertion.jsx","components/contextapi/context/themeContext.jsx","components/contextapi/contextExampleGrandChild.jsx","components/contextapi/contextExampleHook.jsx","components/contextapi/contextExampleChild.jsx","components/contextapi/themeToggle.jsx","components/contextapi/contextExample.jsx","components/hoc/user.jsx","components/hoc/hoc.jsx","components/hoc/withUserId.jsx","components/hooks/hooks.jsx","components/topics.jsx","components/about.jsx","components/content.jsx","App.js","serviceWorker.js","store/reducer.js","store/configureStore.js","index.js"],"names":["module","exports","Header","className","alt","src","to","exact","activeClassName","href","blogSlice","createSlice","name","initialState","list","loading","numBlogs","currentPage","reducers","addBlogPost","state","action","push","payload","loadBlogPosts","changeNumBlogs","parseInt","changeCurrentPage","actions","numBlogsSelector","getPaginatedBlogPosts","createSelector","items","num","page","sliceBeg","slice","Pagination","itemsCount","pageSize","onPageChange","pagesCount","Math","ceil","console","log","disabled","onClick","PostList","dispatch","useDispatch","store","useStore","posts","useSelector","numItems","numPosts","getState","length","useEffect","a","fetch","config","response","json","data","onChange","evt","target","value","map","item","key","post","id","title","body","cartSlice","products","cartProducts","removeProduct","index","findIndex","splice","changeQuantity","product","val","quantity","addProductToCart","storeProducts","price","Number","random","toFixed","cartList","getProducts","getCart","getCartQuantity","reduce","sum","getCartTotal","round","total","parseFloat","Product","props","handleAdd","width","thumbnailUrl","ProductList","handleAddToCart","ShoppingCartIcon","cart","CartHeader","type","CartItemDetail","onRemove","onDecrement","onIncrement","totalPrice","CartList","cartTotal","handleRemove","handleDecrementQuantity","handleIncrementQuantity","Store","numProducts","path","NoMatch","location","useLocation","pathname","ReduxText","Redux","Insertion","unsorted","logArray","tmpArr","len","i","temp","j","ThemeContext","createContext","ThemeContextProvider","isLightTheme","light","syntax","ui","bg","dark","toggleTheme","setState","Provider","this","children","Component","ContextExampleGrandChild","context","theme","style","background","color","contextType","ContextExampleHook","Consumer","ContextExampleChild","ThemeToggle","ContextExample","User","user","email","LoadUser","NewComponent","userId","useState","setUser","axios","get","then","res","displayName","getDisplayName","withUserId","Hoc","Hooks","count","setCount","eventType","handler","handlerRef","useRef","current","internalHandler","e","document","addEventListener","removeEventListener","useEventListener","c","Topics","About","height","NitroImage","TurboImage","Content","App","Boolean","window","hostname","match","combineReducers","configureStore","reducer","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64ea14e7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nitro.121f5ffa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/turbo.631d4379.jpg\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nconst Header = () => {\n    return ( \n        <header>\n            <nav className=\"row navbar navbar-light bg-white\">\n                <div className=\"col-1 text-right offset-md-1\">\n                    <img alt=\"Amy Wightman\" className=\"rounded-circle\" src=\"https://media-exp1.licdn.com/dms/image/C4D03AQEqTr3b0p-IjA/profile-displayphoto-shrink_200_200/0/1600640077493?e=1615420800&amp;v=beta&amp;t=WVmPIY8lvEnWoXVjmX5AiL8vnbjSlgkCpLG4BA1pKO0\" />\n                </div>\n                <div className=\"col-md-4\">\n                    <h2>Amy Wightman</h2>\n                </div>\n                <div className=\"col-md-6 text-center\">\n                    <ul className=\"list-inline\">\n                        <li className=\"list-inline-item navbar-brand\">\n                            <NavLink to=\"/\" exact activeClassName=\"active\">\n                                <i className=\"fa fa-address-card fa-lg\"></i>\n                                About\n                            </NavLink>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <NavLink to=\"/redux\" activeClassName=\"active\"><i className=\"fa fa-lock fa-lg\"></i>Redux</NavLink>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <NavLink to=\"/topics\" activeClassName=\"active\">\n                            <i className=\"fa fa-file fa-lg\"></i>\n                            Topics\n                            </NavLink>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <a href=\"https://github.com/ymadh/ymadh.github.io\">\n                            <i className=\"fa fa-github fa-lg\"></i>\n                            Github\n                            </a>\n                        </li>\n                        <li className=\"list-inline-item navbar-brand\">\n                            <a href=\"https://www.linkedin.com/in/amydunphy/\">\n                            <i className=\"class fa fa-linkedin fa-lg\"></i>\n                            LinkedIn</a>\n                        </li>\n                    </ul>\n                </div>\n            </nav>\n        </header>\n     );\n}\n \nexport default Header;","import { createSlice } from '@reduxjs/toolkit'\nimport * as config from '../config.json';      \nimport { createSelector } from 'reselect';\n\nconst blogSlice = createSlice({\n  name: 'blogs',\n  initialState: {\n    list: [],\n    loading: false,\n    numBlogs: 6,\n    currentPage: 1\n  },\n  reducers: {\n    addBlogPost: (state, action) => {\n        state.list.push(action.payload);\n    },\n    loadBlogPosts: (state, action) => {\n      state.list = action.payload;\n    },\n    changeNumBlogs: (state, action) => {\n      state.numBlogs = parseInt(action.payload);\n      state.currentPage = 1;\n    },\n    changeCurrentPage: (state, action) => {\n      state.currentPage = state.currentPage + parseInt(action.payload);\n    }\n  }\n});\n\nexport const {addBlogPost, loadBlogPosts, changeNumBlogs, changeCurrentPage} = blogSlice.actions;\n\nexport default blogSlice.reducer;\n\nconst url = 'posts';\n\n\n  export function getBlogPosts() {\n      return async dispatch => {\n       \n        try {\n          const response = await fetch(config.apiUrl + url);\n          const data = await response.json();\n    \n          dispatch(loadBlogPosts(data))\n        } catch (error) {\n          console.log(error);\n          // dispatch(getRecipesFailure())\n        }\n      }\n    };\n\n    // export const getPaginatedBlogPosts = state =>  state.blogSlice.list;\n    const blogSelector = state => state.blogSlice.list;\n    const pageSelector = state => state.blogSlice.currentPage;\n    export const numBlogsSelector = state => state.blogSlice.numBlogs;\n\n    export const getPaginatedBlogPosts = createSelector(\n      blogSelector,\n      numBlogsSelector,\n      pageSelector,\n      (items, num, page) => {\n        let sliceBeg = (page - 1) * num;\n        return items.slice(sliceBeg, sliceBeg + num);\n      });\n\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n\nconsole.log(currentPage, pagesCount);\n  return (\n    <nav>\n      <ul className=\"pagination pagination-sm\">\n      <li><button disabled={currentPage === 1} className=\"mr-2 btn btn-primary\" onClick={() => onPageChange(-1)}>Prev</button></li>\n      <li><button disabled={currentPage === pagesCount} className=\"btn btn-primary\" onClick={() => onPageChange(1)}>Next</button></li>\n       \n      </ul>\n    </nav>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  currentPage: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired\n};\n\nexport default Pagination;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch, useStore } from 'react-redux';\nimport { getPaginatedBlogPosts, changeNumBlogs, numBlogsSelector, changeCurrentPage, getBlogPosts } from '../store/blogSlice';\nimport Pagination from './common/pagination';\n\nconst PostList = () => {\n\n    // todo \n    // write a custom shared hook\n    const dispatch = useDispatch();\n    const store = useStore();\n    \n    \n    const posts = useSelector(getPaginatedBlogPosts);\n    const numItems = useSelector(numBlogsSelector);\n    const numPosts = store.getState().blogSlice.list.length;\n    const currentPage = store.getState().blogSlice.currentPage;\n\n    const numItemsArr = [3,6,12,24,36];\n    const handleNumChange = (evt) => {\n        dispatch(changeNumBlogs(evt.target.value));\n    }\n\n    const handlePageChange = (value) =>  {\n        dispatch(changeCurrentPage(value));\n    }\n  \n\n    useEffect(() => {\n        dispatch(getBlogPosts());\n\n\n    }, [dispatch]);\n\n    return (  \n        <div className=\"container\">\n        <div className=\"row  m-2\"> \n            <div className=\"col-md-1 offset-md-9\">\n                Page {currentPage}   \n            </div>\n            <div className=\"col-md-2\">\n                <select onChange={handleNumChange} className=\"btn-mini\">\n                <option value=\"\">Show</option>\n                    {numItemsArr.map((item) => <option key={item} value={item}>{item}</option>)}\n                </select>\n            </div>\n            \n        </div>\n        <div className=\"row justify-content-md-center\">\n\n            {posts.map((post) =>  {\n                return (\n                    <div key={post.id} className=\"card  col-md-3 m-1 \">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">{post.title}</h5>\n                            <p className=\"card-text\">\n                            {post.body}\n                            </p>\n                            \n                        </div>\n                    </div>\n                );\n               \n            })}\n        </div>\n        <Pagination itemsCount={numPosts} pageSize={numItems} currentPage={currentPage} onPageChange={handlePageChange} />\n        </div>\n    )\n}\n \nexport default PostList;","import { createSlice } from '@reduxjs/toolkit'\nimport * as config from '../config.json';      \nimport { createSelector } from 'reselect';\n\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    products: [],\n    loading: false,\n    cartProducts: []\n    \n  },\n  reducers: {\n    removeProduct: (state, action) => {\n      \n      const index = state.cartProducts.findIndex((item) => item.id === action.payload.id);\n      state.cartProducts.splice(index, 1);\n     \n      \n\n    },\n    changeQuantity: (state, action) => {\n      const { product, val } = action.payload;\n      const index = state.cartProducts.findIndex((item) => item.id === product.id);\n      state.cartProducts[index].quantity += parseInt(val);\n\n\n    },\n    addProductToCart: (state, action) => {\n\n      // check to see if the product exists\n      const index = state.cartProducts.findIndex((item) => item.id === action.payload.id);\n\n      if (index === -1) {\n        const product = {...action.payload, quantity: 1};\n        state.cartProducts.push(product);\n      } else {\n        state.cartProducts[index].quantity += 1;\n      }\n       \n       \n    },\n    storeProducts: (state, action) => {\n      state.products = action.payload;\n      state.products.map((item) => {\n        item.price = Number(Math.random() * 100).toFixed(2);\n        if (item.id < 3) {\n          item.quantity = 1;\n          state.cartProducts.push(item);\n\n        }\n      })\n    }\n  }\n});\n\nexport const { storeProducts, addProductToCart,changeQuantity, removeProduct } = cartSlice.actions;\n\nexport default cartSlice.reducer;\n\n\n// takes the free api url for photos\n// adds a random price to the info\nconst url = 'photos';\nexport function loadProducts() {\n  \n  return async dispatch => {\n   \n    try {\n      const response = await fetch(config.apiUrl + url);\n      const data = await response.json();\n\n      // only need 10 items.\n      dispatch(storeProducts(data.splice(0,10)));\n    } catch (error) {\n      console.log(error);\n    }\n  }\n};\n\n const productList = state => state.cartSlice.products;\n const cartList = state => state.cartSlice.cartProducts;\n\n export const getProducts = createSelector(\n  productList,\n  (items) => items.slice(0,10)\n );\n\n export const getCart = createSelector(\n  cartList,\n  (items) => items\n );\n export const getCartQuantity = createSelector(\n  cartList,\n  (items) => items.reduce((sum, item) => { return sum + item.quantity; }, 0)\n );\n\n export const getCartTotal = createSelector(\n   cartList,\n   (items) => \n   { return Math.round(items.reduce((total, item) =>  { return total + (item.quantity * parseFloat(item.price)); }, 0)).toFixed(2);  }\n \n )","import React from 'react';\n\nconst Product = (props) => {\n    const { product, handleAdd } = props;\n    return ( \n    \n        <div className=\"row pt-2 mt-2 border-top\">\n            <div className=\"col-md-3\"><img alt={product.title} width=\"100\" src={product.thumbnailUrl} /></div>\n\n            <div className=\"col-md-5\">{product.title}</div>\n            <div className=\"col-md-1\">{product.price}</div>\n            <div className=\"col-md-3\"><button onClick={() => handleAdd(product)} className=\"btn btn-primary\">Add to Cart</button></div>\n\n       </div>\n     );\n}\n \nexport default Product;","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport  { getProducts, addProductToCart } from '../../store/cartSlice';\nimport Product from './product';\n\nconst ProductList = () => {\n\n    const dispatch = useDispatch();\n    const products = useSelector(getProducts);\n    \n    const handleAddToCart = (product) => {\n        dispatch(addProductToCart(product));\n    }\n    return ( \n        <div>\n            {products.map((product) => \n                <Product key={product.id} handleAdd={handleAddToCart} product={product} />\n            )}\n        \n        </div>\n     );\n}\n \nexport default ProductList;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getCartQuantity } from '../../store/cartSlice';\nimport { useSelector } from 'react-redux';\n\nconst ShoppingCartIcon = () => {\n\n    const cart = useSelector(getCartQuantity);\n\n    return (\n        <div className=\"row\">\n            <div className=\"offset-md-11 col-md-1\">\n                <NavLink to=\"/redux/store/cart\">\n                    <span className=\"fa-stack fa-2x\">\n                        <i className=\"fa fa-circle fa-stack-2x\"></i>\n                        <i className=\"fa fa-shopping-cart fa-stack-1x fa-inverse\"></i>\n                        <span className=\"cart-count badge badge-danger badge-pill\">{cart}</span>\n                    </span>\n                </NavLink>\n            </div>\n        </div>\n\n    );\n}\n\nexport default ShoppingCartIcon;","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst CartHeader = () => {\n    return ( \n        <div className=\"row\">\n        <div className=\"col-md-6\">\n            <span className=\"fa fa-shopping-cart mr-2\"></span> \n            Shopping Cart\n        </div>\n        <div className=\"col-md-6\">\n            <NavLink to=\"/redux/store\" type=\"button\" className=\"btn btn-primary btn-sm btn-block\">\n                <span className=\"glyphicon glyphicon-share-alt\"></span> Continue shopping\n            </NavLink>\n        </div>\n    </div>\n     );\n}\n \nexport default CartHeader;","import React from 'react';\n\nconst CartItemDetail = (props) => {\n\n    const { product, onRemove, onDecrement, onIncrement } = props;\n    const totalPrice = (product.price * product.quantity).toFixed(2);\n\n    return ( \n         <div key={product.id} className=\"mt-2 row\">\n            <div className=\"col-md-1\"><img alt={product.title} width=\"50px\" src={product.thumbnailUrl} /></div>\n            <div className=\"col-md-5\">{product.title}</div>\n            <div className=\"col-md-1 mt-1\">\n            Qty: {product.quantity}\n            </div>\n            <div className=\"col-md-2\">\n                <button type=\"button\" onClick={onIncrement}  className=\"btn btn-link btn-xs\">\n                    <span className=\"fa fa-plus pr-2\"> </span>\n                </button>\n                <button disabled={product.quantity === 0} type=\"button\" onClick={onDecrement}  className=\"btn btn-link btn-xs\">\n                    <span className=\"fa fa-minus pr-2\"> </span>\n                </button>\n            </div>\n            <div className=\"col-md-2 mt-1\">${totalPrice}</div>\n\n            <div className=\"col-md-1\">\n                <button onClick={onRemove}type=\"button\" className=\"btn btn-link btn-xs\">\n                    <span className=\"fa fa-trash\"> </span>\n                </button>\n            </div>\n\n        </div>\n     )\n}\n \nexport default CartItemDetail;","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCart, getCartTotal, changeQuantity, removeProduct } from '../../store/cartSlice';\nimport CartHeader from './cartHeader';\nimport CartItemDetail from './cartItemDetail';\n\nconst CartList = () => {\n\n    const dispatch = useDispatch();\n    const cart = useSelector(getCart);\n    const cartTotal = useSelector(getCartTotal);\n  \n    const handleIncrementQuantity = (product) => {\n        dispatch(changeQuantity({product, val: 1}));\n    }\n\n    const handleDecrementQuantity = (product) => {\n        dispatch(changeQuantity({product, val: -1}));\n    }\n\n    const handleRemove = (product) => {\n        dispatch(removeProduct(product));\n    }\n    return ( \n        <div className=\"container\">\n        <hr />\n           <CartHeader />\n            {cart.map((product) => <CartItemDetail \n              key={product.id}\n              product={product} \n              onRemove={()=>{handleRemove(product)}}\n              onDecrement={()=>{handleDecrementQuantity(product)}}\n              onIncrement={()=>{handleIncrementQuantity(product)}}\n               />\n            )}\n            <div className=\"row\">\n            <div className=\"col-md-2 offset-md-10\">\n            Total: $ {cartTotal}\n            </div></div>\n        </div>\n       \n     );\n}\n \nexport default CartList;","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\n\nimport { loadProducts, getProducts } from '../store/cartSlice';\nimport ProductList from './products/productList';\nimport ShoppingCartIcon from './products/shoppingCartIcon';\nimport CartList from './cart/cartList';\n\nconst Store = () => {\n\n  const dispatch = useDispatch();\n\n  const numProducts = useSelector(getProducts);\n  useEffect(() => {\n\n\n    if (numProducts.length === 0) {\n      dispatch(loadProducts());\n\n    }\n\n\n  }, [dispatch, numProducts]);\n\n  return ( \n    <Switch>\n\n      <Route path=\"/redux/store/cart\">\n        <CartList />\n      </Route>\n      <Route path=\"/redux/store\">\n        <ShoppingCartIcon />\n        <ProductList />\n      </Route>\n    </Switch>\n\n  );\n}\n \nexport default Store;","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nconst NoMatch = () => {\n    let location = useLocation();\n\n    return (\n      <div className=\"container\">\n        <p>\n          No match for <code>{location.pathname}</code>\n        </p>\n      </div>\n    );;\n}\n \nexport default NoMatch;","import React from 'react';\nimport { NavLink, Route, Switch } from 'react-router-dom';\nimport PostList from './postList';\nimport Store from './store';\nimport NoMatch from './noMatch';\n\nconst Redux = () => {\n    return (\n        <main className=\"bg-light\">\n\n            <div className=\"className container\">\n                <section className=\"py-3 text-center\">\n                    <div className=\"row py-lg-5\">\n                        <div className=\"col-lg-6 col-md-8 mx-auto\">\n                            <h2>Redux Examples</h2>\n                            <hr />\n                            \n                            <a href=\"https://github.com/ymadh/ymadh.github.io\" className=\"btn btn-secondary\">Checkout my source code</a>\n\n                        </div>\n                    </div>\n                </section>\n\n      \n                    \n                 \n                    \n                <section>\n                <div className=\"container\">\n                    <ul className=\"secondaryNav nav nav-pills mt-3\">\n                        <li className=\"nav-item\">\n                            <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/redux\">Home</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink activeClassName=\"active\" className=\"nav-link\" to=\"/redux/store\">Store</NavLink>\n                        </li>\n                        <li className=\"nav-item\">\n                            <NavLink className=\"nav-link\" to=\"/redux/post\">Blog Posts</NavLink>\n                        </li>\n\n                    </ul>\n                    <Switch>\n                        <Route path=\"/redux/post\">\n                            <PostList />\n                        </Route>\n                        <Route path=\"/redux/store\">\n                            <Store />\n                        </Route>\n                        \n                        <Route path=\"/redux\" exact>\n                            <ReduxText />\n                        </Route>\n\n                        <Route path=\"*\">\n                            <NoMatch />\n                        </Route>\n                    </Switch>\n                    </div>\n                </section>\n            </div>\n\n        </main>\n    );\n}\n\nfunction ReduxText() {\n    return (\n        <div>\n            <hr />\n            <p>Store: React / Redux exaple of a shopping cart</p>\n            <p>Using a list of images from jsonplaceholder, I add in a random value for the pricing\n                and automatically add a few items to the cart. From there a regular cart type experience\n                happens.\n            </p>\n            <hr />\n            \n            <p>Blog Posts: React / Redux example of a list of blog posts with pagination</p>\n            <p>Fetches a list of blogs from https://jsonplaceholder.typicode.com/ - features include\n                pagination / changing the number of items per page, disabling buttons - all in redux & react.\n            </p>\n        </div>\n    );\n}\nexport default Redux;","import React from 'react';\n\nconst Insertion = () => {\n\n    const unsorted = [6,5,4,3,2,21];\n\n    const logArray = [];\n    \n   \n        const tmpArr = [...unsorted];\n        let len = tmpArr.length;\n\n        for (let i=1; i<len; i++) {\n            let temp = tmpArr[i];\n\n            for (let j=i-1; j>=0; j--) {\n                \n                logArray.push([`comparing ${temp} to ${tmpArr[j]}`]);\n                if (tmpArr[j] > temp) {\n                    logArray.push([`swap ${temp} and ${tmpArr[j]}`]);\n                    tmpArr[j+1] = tmpArr[j];\n                    tmpArr[j] = temp;\n                    \n                }\n            \n            }\n        \n        }\n        \n\n\n   \n    return ( \n        <div>\n            Insertion Sort Alogorithm\n            <div>\n                Starting Array = {unsorted.map((item) => {\n                    return <span>{item}, </span>\n                })}\n                <div>Final Array =\n                {tmpArr.map((item) => {\n                    return <span key={item}>{item} </span>\n                })}\n                </div>\n\n                {logArray.map((item) => {\n                    return <div  key={item}>{item}</div>\n                })}\n            </div>\n        </div>\n     );\n}\n \nexport default Insertion;","import React, { Component, createContext } from 'react';\n\n// create the context\nexport const ThemeContext = createContext();\n\n// create a class (provider) with a state of data that will be shared\n\nclass ThemeContextProvider extends Component {\n    state = { \n        isLightTheme: true,\n        light: {\n            syntax: '#555',\n            ui: '#ddd',\n            bg: '#eee'\n        },\n        dark: {\n            syntax: '#ddd',\n            ui: '#333',\n            bg: '#555'\n        }\n     };\n\n     toggleTheme = () => {\n         this.setState({isLightTheme: !this.state.isLightTheme});\n     }\n\n    render() { \n        return ( \n            <ThemeContext.Provider value={{...this.state, toggleTheme: this.toggleTheme}}>\n\n                {this.props.children}\n            </ThemeContext.Provider>\n         );\n    }\n}\n \nexport default ThemeContextProvider;\n\n","import React, { Component } from 'react';\nimport { ThemeContext } from './context/themeContext';\n\nclass ContextExampleGrandChild extends Component {\n    \n    // look up the tree to find the context provider\n    static contextType = ThemeContext;\n   \n    render() { \n        const { isLightTheme, light, dark } = this.context;\n    \n        const theme = isLightTheme ? light : dark;\n    \n        return ( \n            <div className=\"card\">\n            <div className=\"card-title text-center\" style={{ background: theme.ui, color: theme.syntax }}>\n            Grand Child</div>\n            <div className=\"card-body\" style={{ background: theme.ui, color: theme.syntax }}>\n            This page has different colors because it accessed the \n            theme from the root class with a context provider</div>\n            </div> );\n\n    }\n}\n \nexport default ContextExampleGrandChild;\n","import React from 'react';\nimport { ThemeContext } from './context/themeContext';\n\nconst ContextExampleHook = () => {\n    return ( \n            <ThemeContext.Consumer>\n                {(context => {\n                     const { isLightTheme, light, dark } = context;\n                     const theme = isLightTheme ? light : dark;\n                \n                    return (\n                        <div className=\"card mt-3\">\n                        <div className=\"card-title text-center\" style={{ background: theme.ui, color: theme.syntax }}>\n                        Grand Child - SFC </div>\n                        <div className=\"card-body\" style={{ background: theme.ui, color: theme.syntax }}>\n                        Accesses the context in a different way to work with SFC</div>\n                        </div>\n                    );\n                })}\n            </ThemeContext.Consumer>\n     );\n}\n \nexport default ContextExampleHook;","import React, { Component } from 'react';\nimport ContextExampleGrandChild from './contextExampleGrandChild';\nimport ContextExampleHook from './contextExampleHook';\n\nclass ContextExampleChild extends Component {\n  \n    render() { \n       \n        return ( \n            <div className=\"card\">\n            <div className=\"card-title text-primary bg-light border-bottom text-center\">Primary Child</div>\n                <div className=\"card-body\">\n                    <div>This page doesn't have any styling, because we haven't accessed the context provider</div>\n                    <div><ContextExampleGrandChild /></div>\n                    <div><ContextExampleHook /></div>\n                </div>\n            </div>\n         );\n    }\n}\n \nexport default ContextExampleChild;\n","import React, { Component } from 'react';\nimport { ThemeContext } from './context/themeContext';\n\nclass ThemeToggle extends Component {\n\n    static contextType = ThemeContext;\n\n    render() { \n        const { toggleTheme, isLightTheme } = this.context;\n        return (\n            <button className=\"btn btn-primary\" onClick={toggleTheme}>Toggle {isLightTheme ? 'Dark' : 'Light'}</button>\n          );\n    }\n}\n \nexport default ThemeToggle;","import React from 'react';\nimport ContextExampleChild from './contextExampleChild';\nimport ThemeContextProvider from './context/themeContext';\nimport ThemeToggle from './themeToggle';\n\nconst ContextExample = () => {\n    return ( \n        <div className=\"container\">\n                <h3>Context Example Root</h3>\n                <div>\n                    <p>Similar to how redux behaves - allows for shared state, shared themes without passing props to all the children</p>\n                    <p>Recommended for authentication information, themes, or preferred language</p>\n                    <p>Here is our tree</p>\n                    <ul>\n                        <li>contextExample -> Context Provider</li>\n                        <li>contextExampleChild</li>\n                        <li>contextExampleGrandChild -> Access Context Provider</li>\n                        <li>contextExampleHook -> Access Context Provider</li>\n                    </ul>\n                </div>\n\n                <div>\n                    <div>Render Children Example:</div>\n                    <ThemeContextProvider>\n                        <ThemeToggle />\n                        <ContextExampleChild />\n                    </ThemeContextProvider>\n\n                </div>\n            </div>\n     );\n}\n \nexport default ContextExample;\n","\nimport React from 'react';\n\nconst User = ({ user }) => {\n    return (\n        <div>\n            <div>{user.name}</div>\n            <div>{user.email}</div>\n        </div>\n    )\n}\n\nexport default User;","// higher order component\n// function that takes a component a returns a new component\n// ie redux: connext; relay: createFragmentContainer\n// for code reusability\n// now that hooks are around we dont use HOC as much anymore.\n\n// higher order function, creates a function and returns a function;\nimport React from 'react';\n\nimport User from './user.jsx';\n// fixes the component name\nimport withUserId from './withUserId';\n\nconst LoadUser = withUserId(User);\n\nconst Hoc = () => {\n\n   \n    return ( \n        <div>\n            <LoadUser userId={3} />        \n            <LoadUser userId={4} />   \n        </div>\n     );\n}\n \nexport default Hoc;","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getDisplayName } from 'recompose';\n\n\nconst withUserId = Component => {\n\n    const NewComponent = ({userId, ...props}) => {\n        const [user, setUser] = useState(null);\n\n        useEffect(() => {\n            // could get user from auth\n            axios.get(`https://jsonplaceholder.typicode.com/users/${userId}`).then((res) => {\n                setUser(res.data);\n            });\n\n        }, []); \n\n        if (!user) return \"Loading...\";\n        return <Component {...props} user={user} />;\n    }\n\n    NewComponent.displayName = `WithUserId(${getDisplayName(Component)})`\n\n    return NewComponent;\n}\n\nexport default withUserId;","import React, { useEffect, useState, useRef } from 'react';\n\nfunction useEventListener(eventType, handler) {\n    const handlerRef = useRef(handler);\n\n   useEffect(() => {\n       handlerRef.current = handler;\n   })\n\n    useEffect(() => {\n\n        // shoud run once\n        console.log('effect ran');\n        function internalHandler(e) {\n            return handlerRef.current(e);\n        }\n        document.addEventListener(eventType, internalHandler);\n\n        // clean up\n        return () => document.removeEventListener(eventType, internalHandler);\n    }, [eventType]);\n}\n\n\nconst Hooks = () => {\n\n    const [count, setCount] = useState(0);\n\n    useEventListener('click', () => {\n        // will log on every click\n        console.log('you clicked');\n    });\n\n\n    return ( \n        <div>\n            <h4>Click anywhere on the page</h4>\n            <button className=\"btn btn-primary\" onClick={() => setCount(c => c+1)}>{count}</button>\n        </div>\n     );\n}\n \nexport default Hooks;","import React from 'react';\nimport Insertion from './topics/sortalgorithms/insertion';\nimport { NavLink, Switch, Route } from 'react-router-dom';\nimport ContextExample from './contextapi/contextExample';\nimport Hoc from './hoc/hoc';\nimport Hooks from './hooks/hooks';\n\nconst Topics = () => {\n    return ( \n        <main className=\"bg-light\">\n\n            <section>\n            <div className=\"container\">\n\n                        <h2 className=\"text-center\">Testing / Playground</h2>\n                        <p>This is an area to play with a variety of concepts.</p>\n                            <ul className=\"secondaryNav nav nav-links mt-3\">\n                                <li className=\"nav-item\">\n                                    <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/topics\">Home</NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/topics/insertion-sort\">Insertion Sort</NavLink>\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/topics/context-example\">Context Example</NavLink>\n                                </li>\n                                \n                                <li className=\"nav-item\">\n                                    <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/topics/hoc\">HOC</NavLink>\n\n                                </li>\n                                <li className=\"nav-item\">\n                                    <NavLink exact activeClassName=\"active\" className=\"nav-link\" to=\"/topics/hooks\">Custom Hooks</NavLink>\n\n                                </li>\n                                {/*<li className=\"nav-item\">\n                                Error Boundaries\n                                </li> \n                                Service Workers*/}\n                  \n                            </ul>\n                    \n                    <div className=\"justify-center\">\n                        <Switch>\n                            <Route path=\"/topics/insertion-sort\">\n                                <Insertion />\n                            </Route>\n                            <Route path=\"/topics/context-example\">\n                                <ContextExample />\n                            </Route>\n                            <Route path=\"/topics/hoc\">\n                                <Hoc />\n                            </Route>\n                            <Route path=\"/topics/hooks\">\n                                <Hooks />\n                            </Route>\n                        </Switch>\n                         {/* <p>Services - https://medium.com/@alshdavid/react-state-and-services-edb95be48851</p> */}\n                  \n                         </div>\n                         </div>\n \n            </section>\n        </main>\n     );\n}\n \nexport default Topics;","import React from 'react';\nimport NitroImage from '../assets/nitro.jpg';\nimport TurboImage from '../assets/turbo.jpg';\n\nconst About = () => {\n    return (\n        <main className=\" bg-light\">\n\n        <section className=\"container\">\n                \n                <h2 className=\"mt-3 text-center \"><i className=\"brand fa fa-free-code-camp\"></i> About Me!</h2>\n                <hr />\n                \n                <p>As a full stack developer for the last 10+ years I have worked with product managers and owners\n                    to develope fully functioning high quality websites. I have been fortunate to work on commercial software\n                    products as well as internal tools to help businesses grow and succeed. \n                </p>\n                <p>I enjoy working with all types of technology and try to spend my free time reading books, taking courses\n                    and practicing various coding skills. The purpose of this site is to serve as a bit of a playground for \n                    things I would like to learn and get better at. Much of my php code remains at work and therefore is private.\n\n                </p>\n                <p>Personally, I am a mom to two boys, one of which is planning on studying Computer Science and the other, \n                    is leaning towards military for a few years. I have two amazing dogs Nitro (lab) \n                    and Turbo (chihuahua). My husband Tanner is a <a href=\"http://www.wightmaninspectiongroup.com\">home inspector</a> in the Charlotte NC area. In our spare time we\n                     love to golf.\n                </p>\n                <div className=\"row justify-content-md-center mb-3\"> \n                    <div className=\"col-md-auto\">\n                        <img alt=\"Nitro\" className=\"rounded\" height=\"250px\" src={NitroImage} />\n                    </div>\n                    <div className=\"col-md-auto\">\n                     <img alt=\"Turbo\" className=\"rounded\" height=\"250px\" src={TurboImage} />\n                    </div>\n                </div>\n                \n                <p className=\"text-primary\">Tech Used to develop this site: React, Redux, Webpack, Bootstrap, Github pages</p>\n            </section>\n                \n                \n            <section className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Server Side</th>\n                            <th>Client Side</th>\n                            <th>Other</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>PHP<br />\n                                Symfony<br />\n                                Api Platform<br />\n                               \n                                Redis<br />\n                                PHPUnit<br />\n                                .NET (limited)<br />\n                                Node (limited)<br />\n                                Python (educationally)\n                                </td>\n                            <td>Javascript (ES6)<br />\n                                JQuery<br />\n                                React<br />\n                                Angular<br />\n                                Bootstrap<br />\n                                Functional Testing<br />\n                            </td>\n                            <td>Rest API <br />\n                                ElasticSearch<br />\n                                WebPack<br />\n                                Azure Cloud<br />\n                                Git<br />\n                                Jira<br /></td>\n                        </tr>\n\n                    </tbody>\n                </table>\n            </section>\n            <section className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Previous Roles</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                <p className=\"font-weight-bold\">Backend Developer</p>\n                                <p>Developed new features, fixed bugs, implemented unit tests.\n                                    Deployed code using bamboo. Created and conusumed REST api's.\n                                </p>\n                                <p className=\"font-weight-bold\">Frontend Developer</p>\n                                <p>Worked on multiple teams writing code in Angular / React. Using designs from the UX teams\n                                    html / css was implemented.\n                                </p>\n                               \n                                <p className=\"font-weight-bold\">Lead Developer</p>\n                                <p>Worked with project managers to plan and execute new features.</p>\n                             \n                                <p className=\"font-weight-bold\">Scrum Master</p>\n                                <p>Helped manange the backlog and worked with the team to provide estimates, plan sprints and run standups.</p>\n\n                            </td>\n                        </tr>\n\n\n                    </tbody>\n                </table>\n            </section>\n            <section className=\"container\">\n                <table className=\"table\">\n                    <thead>\n                        <tr>\n                            <th>Education</th>\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr>\n                            <td>\n                                B.S. Computer Science, George Mason University 1999<br />\n                                M.S. Computer Science, East Carolina Universty - In Progress\n                </td>\n                        </tr>\n                        <tr>\n                            <td>Other Courses Taken:<br />\n                                ES6 Javascript: The Complete Developers Guide - Stephen Grider<br />\n                                Mastering React - Mosh Hamedani<br />\n                                The Ultimate Redux Course - Mosh Hamedani<br />\n                                The Complete Node.js Course\n                </td>\n                        </tr>\n\n                    </tbody>\n                </table>\n            </section>\n\n\n        </main>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport Redux from './redux';\nimport Topics from './topics';\nimport About from './about';\nimport NoMatch from './noMatch';\n\nconst Content = () => {\n    return ( \n        <HashRouter>\n            <Switch>\n            <Route path=\"/redux\">\n                <Redux />\n            </Route>\n            <Route path=\"/topics\">\n                <Topics />\n             </Route>\n             <Route path=\"/\" exact>\n                <About />\n             </Route>\n             <Route>\n                <NoMatch />\n            </Route>\n            </Switch>\n        </HashRouter>\n        \n     );\n}\n \nexport default Content;","import React from 'react';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport Header from './components/header';\r\nimport Content from './components/content';\r\n\r\n\r\nfunction App() {\r\n\r\n\r\n  return (\r\n    <HashRouter>\r\n      <Header />\r\n      <Content />\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import blogSlice from './blogSlice';\nimport { combineReducers } from 'redux';\nimport cartSlice from './cartSlice';\n\n\nexport default combineReducers({\n  blogSlice,\n  cartSlice\n});","import { configureStore } from '@reduxjs/toolkit';\r\nimport combineReducers from './reducer.js';\r\n\r\nexport default configureStore({\r\n  reducer: combineReducers\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport configureStore from './store/configureStore';\r\nimport './css/custom.scss';\r\n\r\nimport 'font-awesome/css/font-awesome.css';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={configureStore}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}